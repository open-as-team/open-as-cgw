# This file is part of the Open AS Communication Gateway.
#
# The Open AS Communication Gateway is free software: you can redistribute it
# and/or modify it under theterms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# The Open AS Communication Gateway is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License along
# with the Open AS Communication Gateway. If not, see http://www.gnu.org/licenses/.


package Underground8::Service::SNMP::SLAVE;
use base Underground8::Service::SLAVE;

use strict;
use warnings;
use Error;
use Underground8::Utils;
use Underground8::Exception;
use Underground8::Exception::FileOpen;
use Underground8::Log;
use Template;
use Data::Dumper;


sub new ($) {
	my $class = shift;
	my $self = $class->SUPER::new('snmp');
	return $self;
}

sub service_stop($) {
	my $self = instance(shift);
	my $output = safe_system($g->{'cmd_snmp_stop'});
}

sub service_start($) {
	my $self = instance(shift);
	my $output = safe_system($g->{'cmd_snmp_start'});
}

sub service_restart($) {
	my $self = instance(shift);
	my $output = safe_system($g->{'cmd_snmp_restart'});
}


sub write_config($$$$$) {
	my $self = instance(shift);
	my ($enabled, $network, $community, $location, $contact) = @_;

	# snmpd.conf
	my $template = Template->new ( { INCLUDE_PATH => $g->{'cfg_template_dir'}, });  
	my $options = {
		info => 'autogenerated by LimesAS',
		enabled => $enabled,
		network => $network,
		community => $community,
		location => $location,
		contact => $contact,
	};

	my $config_content;
	$template->process($g->{'template_snmpd_conf'}, $options, \$config_content) 
		or throw Underground8::Exception($template->error);

	open (SNMPDCONF,'>',$g->{'file_snmpd_conf'})
		or throw Underground8::Exception::FileOpen($g->{'file_snmpd_conf'});
	print SNMPDCONF $config_content;
	close (SNMPDCONF);


	# write logrotate template
	$template = Template->new ( { INCLUDE_PATH => $g->{'cfg_template_dir'}, });
	$options = {
		info => 'autogenerated by LimesAS',
	};
#
	$config_content = "";
	$template->process($g->{'template_snmpd_default'}, $options, \$config_content)
		or throw Underground8::Exception($template->error);
#
	open (SNMPDEF,'>',$g->{'file_snmpd_default'})
		or throw Underground8::Exception::FileOpen($g->{'file_snmpd_default'});
#
	print SNMPDEF $config_content;
#
	close (SNMPDEF);

}



1;
