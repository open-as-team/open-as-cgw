# This file is part of the Open AS Communication Gateway.
#
# The Open AS Communication Gateway is free software: you can redistribute it
# and/or modify it under theterms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# The Open AS Communication Gateway is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License along
# with the Open AS Communication Gateway. If not, see http://www.gnu.org/licenses/.


package Underground8::Service::Monit::SLAVE;
use base Underground8::Service::SLAVE;

use strict;
use warnings;
use Error;
use Underground8::Utils;
use Underground8::Exception;
use Underground8::Exception::FileNotFound;
use Underground8::Exception::FileOpen;
use Template;
use Data::Dumper;


sub new ($)
{
    my $class = shift;
    my $self = $class->SUPER::new('monit');
    return $self;
}

sub service_stop($)
{
    my $self = instance(shift);
    
    my $output = safe_system($g->{'cmd_monit_stop'});
}

sub service_start($)
{
    my $self = instance(shift);
    
    my $output = safe_system($g->{'cmd_monit_start'});
}

sub service_restart($)
{
    my $self = instance(shift);
    
    my $output = safe_system($g->{'cmd_monit_restart'});
}


sub write_config($$)
{
    my $self = instance(shift);
   
    my $memory_factor = $self->memory_factor;
 
    my $template = Template->new (
	{
	    INCLUDE_PATH => $g->{'cfg_template_dir'},
	});  
    
    my $options = {
	    info => 'autogenerated by AS Communication Gateway',
        memory_factor => $memory_factor,
    };

    #
    # set group-write permissions before opening monitrc
    # monit does not start with group-write-rights, so we will need
    # to remove this later!
    #
    safe_system($g->{'cmd_monit_perm_addgrp'});

    my $config_content;
    $template->process($g->{'template_monit'},$options,\$config_content) 
        or throw Underground8::Exception($template->error);

    open (MONITCONF,'>',$g->{'file_monit'})
        or throw Underground8::Exception::FileOpen($g->{'file_monit'});

    print MONITCONF $config_content;

    close (MONITCONF);

    my $config_content_default;
    $template->process($g->{'template_monit_default'},$options,\$config_content_default) 
        or throw Underground8::Exception($template->error);

    open (MONITCONF,'>',$g->{'file_monit_default'})
        or throw Underground8::Exception::FileOpen($g->{'file_monit_default'});

    print MONITCONF $config_content_default;

    close (MONITCONF);

    safe_system($g->{'cmd_monit_perm_delgrp'});

}



1;
